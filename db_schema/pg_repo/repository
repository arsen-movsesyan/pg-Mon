upd_1="CREATE OR REPLACE VIEW pm_master_db_lookup_view AS
SELECT hc.id AS host_id, hc.hostname, dn.id AS db_id, dn.db_name
FROM host_cluster hc
JOIN database_name dn ON hc.id = dn.hc_id
WHERE hc.is_master AND hc.observable AND dn.observable"

upd_2="DROP FUNCTION pm_database_stat_diff(integer, integer);

CREATE OR REPLACE FUNCTION pm_database_stat_diff(IN first integer DEFAULT 1, IN last integer DEFAULT 0)
RETURNS TABLE(db_id integer, db_size bigint, xact_commit bigint, xact_rollback bigint,blks_fetch bigint, blks_hit bigint, tup_returned bigint, tup_fetched bigint, tup_inserted bigint,tup_updated bigint, tup_deleted bigint) 
AS
$BODY$
SELECT
dn.id AS db_id,
last.db_size - first.db_size AS db_size,
last.xact_commit - first.xact_commit AS xact_commit,
last.xact_rollback - first.xact_rollback AS xact_rollback,
last.blks_fetch - first.blks_fetch AS blks_fetch,
last.blks_hit - first.blks_hit AS blks_hit,
last.tup_returned - first.tup_returned AS tup_returned,
last.tup_fetched - first.tup_fetched AS tup_fetched,
last.tup_inserted - first.tup_inserted AS tup_inserted,
last.tup_updated - first.tup_updated AS tup_updated,
last.tup_deleted - first.tup_deleted AS tup_deleted
FROM host_cluster hc
JOIN database_name dn ON hc.id = dn.hc_id
JOIN database_stat first ON dn.id = first.dn_id
JOIN database_stat last ON dn.id = last.dn_id
JOIN log_time a ON a.id = first.time_id
JOIN log_time b ON b.id = last.time_id
WHERE dn.alive
AND dn.observable
AND a.id=(SELECT MIN(id) FROM log_time WHERE hour_truncate >= date_trunc('hour',now()- $1 * interval '1 hour'))
AND b.id=(SELECT MIN(id) FROM log_time WHERE hour_truncate >= date_trunc('hour',now()- $2 * interval '1 hour'));
$BODY$
LANGUAGE sql"

upd_3="CREATE OR REPLACE VIEW pm_master_hc_lookup_view AS 
SELECT hc.id AS host_id, hc.hostname, hc.param_ip_address AS ip_address
FROM host_cluster hc
WHERE hc.is_master AND hc.observable;

DROP FUNCTION pm_bgwriter_stat_diff(integer, integer);

CREATE OR REPLACE FUNCTION pm_bgwriter_stat_diff(IN first integer DEFAULT 1, IN last integer DEFAULT 0)
 RETURNS TABLE(host_id integer, checkpoints_timed bigint, checkpoints_req bigint, buffers_checkpoint bigint, buffers_clean bigint, maxwritten_clean bigint, buffers_backend bigint, buffers_alloc bigint) AS
$BODY$
SELECT hc.id AS host_id,
last.checkpoints_timed - first.checkpoints_timed AS checkpoints_timed,
last.checkpoints_req - first.checkpoints_req AS checkpoints_req,
last.buffers_checkpoint - first.buffers_checkpoint AS buffers_checkpoint,
last.buffers_clean - first.buffers_clean AS buffers_clean,
last.maxwritten_clean - first.maxwritten_clean AS maxwritten_clean,
last.buffers_backend - first.buffers_backend AS buffers_backend,
last.buffers_alloc - first.buffers_alloc AS buffers_alloc
FROM host_cluster hc
JOIN bgwriter_stat first ON hc.id=first.hc_id
JOIN bgwriter_stat last ON hc.id=last.hc_id
JOIN log_time a ON a.id=first.time_id
JOIN log_time b ON b.id=last.time_id
WHERE hc.alive
AND hc.observable
AND a.id=(SELECT MIN(id) FROM log_time WHERE hour_truncate >= date_trunc('hour',now()- $1 * interval '1 hour'))
AND b.id=(SELECT MIN(id) FROM log_time WHERE hour_truncate >= date_trunc('hour',now()- $2 * interval '1 hour'));
$BODY$
  LANGUAGE sql;
"


UPD_3=DROP VIEW pm_last_va_stat;

CREATE OR REPLACE VIEW pm_last_va_stat AS 
SELECT tn.id AS table_id,
now() - tvas.lv::timestamp with time zone AS last_vacuum, 
now() - tvas.lav::timestamp with time zone AS last_autovacuum, 
now() - tvas.la::timestamp with time zone AS last_analyze, 
now() - tvas.laa::timestamp with time zone AS last_autoanalyze
FROM table_name tn
JOIN (SELECT table_va_stat.tn_id, max(table_va_stat.last_vacuum) AS lv, 
MAX(table_va_stat.last_autovacuum) AS lav, 
MAX(table_va_stat.last_analyze) AS la, 
MAX(table_va_stat.last_autoanalyze) AS laa
FROM table_va_stat
GROUP BY table_va_stat.tn_id) tvas ON tn.id = tvas.tn_id
WHERE tn.alive;

ALTER FUNCTION vw_table_hip_pct(integer, integer)
RENAME TO vw_table_heap_pct;

ALTER FUNCTION vw_table_idx_hip_pct(integer, integer)
RENAME TO vw_table_idx_hit_pct;"
